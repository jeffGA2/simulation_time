static data name_convention

1. main class

1).Static variable "over", this variable lets the program know to stop the simulation process.

2).Two objects "lift t[]" and "passenger p[]" . passenger object will store information about people which is created psuedo randomly to fit a traffic pattern. lift object stores the lift info, like status and occupancy. These objects have to be "static" because the other classes also have to call them.

3).Time control: we chose to use Timer class which is contained in the java.util package. We use "timer.schedule". Main process will traverse both lift and passenger objects every second and trace the changes by using "schedule process".

4).Time count: we choose to use integer variable "int timecount" to count the time. Everytime the simulation finish traversal work, this variable will add 1. This represents one second of simulation time. 

notes: all time variables will transfer to seconds and use integer type.

passenger class

1). "int P_arrivetime" store passenger arrive time which is created randomly. This attribute is given to seconds.

2). "int P_waitingtime" stores each passengers actual waiting time. The calculate method is enter_time - arrive_time

3). "P_status": The main process trace the change every seconds. There will be several status to make sure where the passenger and what the passenger is doing at that moment. example: "status[5][2] = 1" means passenger is at floor 5 for lift2, the value means waiting (1 means waiting, 2 means entering, 3 means in the lift). 

4). "static int T" used to store the passenger simulation entrance time. 

lift class

1). "L_status" the status of the lift. once the system detect a new arrival the status changes to running which stored as "1". "2" means stop but have the next runnning task. "0" means idle.
Once the L_status switch to the 0. the system will stored the current time and start to timing the idle time which will be a important statistical datum to output in the end.

3) "full" if there is a passenger enters, the function enter() will add 1 to the variable "occupancy" and leave() will reduce it by 1, once it reaches the capacity the lift will be not allowed to pick any passenger until someone gets off the lift.

2) "occupancy" record the the lift occupancy.(???)
